# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  build:
    working_directory: ~/project
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx6g"
      GRAALVM_HOME: /home/circleci/project/.graalvm
      IMAGE_NAME: kiwi1086/quarkus-restnative-demo
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Build and test
          command: ./gradlew clean build
          no_output_timeout: 30m
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: build/test-results/test
      - store_artifacts: # Upload test results for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: build/test-results/test
          when: always
      - run:
          name: Build Project
          command: |
            #./gradlew buildNative -Dquarkus.native.container-build=true --debug --stacktrace
            ./gradlew clean build
          no_output_timeout: 30m
      - run:
          name: Build Docker image
          command: |
            #docker build -f src/main/docker/Dockerfile.native -t $IMAGE_NAME:latest .
            #docker build -f src/main/docker/Dockerfile.armjvm -t $IMAGE_NAME:latest .
            docker build -f src/main/docker/Dockerfile.jvm -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1
workflows:
  version: 2
  workflow:
    jobs:
      - build